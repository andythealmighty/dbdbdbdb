- ================================
-- A. Users and Profiles
-- ================================

CREATE TABLE users (
id INT AUTO_INCREMENT PRIMARY KEY,                   -- 고유 사용자 ID
email VARCHAR(255) UNIQUE NOT NULL,                  -- 로그인 이메일
password_hash VARCHAR(255) NOT NULL,                 -- 암호화된 비밀번호
name VARCHAR(100),                                   -- 사용자 이름
phone VARCHAR(20),                                   -- 연락처
role ENUM('franchise', 'agent', 'owner', 'admin') NOT NULL,   -- 사용자 역할 (프랜차이즈, 부동산, 예비점주, 관리자)
is_deleted BOOLEAN DEFAULT FALSE,                    -- 소프트 삭제 여부
created_at DATETIME DEFAULT CURRENT_TIMESTAMP        -- 생성일시
);

CREATE TABLE franchise_profiles (
user_id INT PRIMARY KEY,                             -- [users.id](http://users.id/) 참조
company_name VARCHAR(255),                           -- 프랜차이즈 회사 이름
position VARCHAR(100),                               -- 직위
bio TEXT,                                            -- 자기소개
FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE agent_profiles (
user_id INT PRIMARY KEY,                             -- [users.id](http://users.id/) 참조
agency_name VARCHAR(255),                            -- 부동산 회사 이름
license_number VARCHAR(100),                         -- 공인중개사 등록번호
bio TEXT,                                            -- 자기소개
FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE owner_profiles (
user_id INT PRIMARY KEY,                             -- [users.id](http://users.id/) 참조
interests TEXT,                                      -- 관심 프랜차이즈/업종/지역 등
FOREIGN KEY (user_id) REFERENCES users(id)
);

- ================================
-- B. Properties (매물)
-- ================================

CREATE TABLE properties (
id INT AUTO_INCREMENT PRIMARY KEY,                   -- 매물 ID
title VARCHAR(255),                                  -- 매물 제목
address VARCHAR(500),                                -- 상세 주소
region_code VARCHAR(10),                             -- 행정동 코드
area_m2 FLOAT,                                       -- 면적 (㎡)
area_pyeong FLOAT,                                   -- 면적 (평)
deposit INT,                                         -- 보증금
monthly_rent INT,                                    -- 월세
sale_price INT,                                      -- 매매가
management_fee INT,                                  -- 관리비
floor INT,                                           -- 층수
building_type VARCHAR(100),                          -- 건물 유형 (상가, 사무실 등)
year_built INT,                                      -- 건축 연도
renovated BOOLEAN,                                   -- 리모델링 여부
available_from DATE,                                 -- 입주 가능일
status ENUM('available', 'pending', 'sold') DEFAULT 'available', -- 상태
is_deleted BOOLEAN DEFAULT FALSE,                    -- 소프트 삭제 여부
agent_id INT,                                        -- 등록한 부동산 사용자 ID
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,       -- 등록일시
FOREIGN KEY (agent_id) REFERENCES users(id)
);

- ================================
--C. Property Requests (매물 요청)
-- ================================

CREATE TABLE property_requests (
id INT AUTO_INCREMENT PRIMARY KEY,                   -- 요청 ID
franchise_id INT,                                    -- 요청한 프랜차이즈 사용자 ID
title VARCHAR(255),                                  -- 요청 제목
description TEXT,                                    -- 요청 설명
region_preference VARCHAR(255),                      -- 선호 지역
radius_km INT,                                       -- 선호 지역 반경 (km)
urgency_level VARCHAR(50),                           -- 긴급도 표시
contact_name VARCHAR(100),                           -- 담당자 이름
contact_phone VARCHAR(50),                           -- 담당자 연락처
status ENUM('pending', 'in_progress', 'completed', 'cancelled'), -- 상태
is_deleted BOOLEAN DEFAULT FALSE,                    -- 삭제 여부
due_date DATE,                                       -- 마감일
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,       -- 등록일
FOREIGN KEY (franchise_id) REFERENCES users(id)
);

CREATE TABLE request_preferences (
id INT AUTO_INCREMENT PRIMARY KEY,
request_id INT,                                      -- property_requests.id 참조
property_type VARCHAR(100),                          -- 매물 유형
transaction_type VARCHAR(50),                        -- 거래 유형 (임대, 매매 등)
category VARCHAR(100),                               -- 업종 카테고리
min_area FLOAT, max_area FLOAT,                      -- 최소/최대 면적
min_floor INT, min_rooms INT, min_toilets INT,       -- 최소 층수/방수/화장실 수
min_parking INT,                                     -- 최소 주차공간 수
required_facilities TEXT,                            -- 필수 내부 시설 (엘리베이터 등)
required_surroundings TEXT,                          -- 필수 주변 시설 (지하철 등)
min_budget INT, max_budget INT,                      -- 예산 범위
min_deposit INT, max_deposit INT,                    -- 보증금 범위
min_rent INT, max_rent INT,                          -- 월세 범위
max_maintenance INT,                                 -- 관리비 최대
max_premium INT,                                     -- 권리금 최대
notes TEXT,                                          -- 추가 메모
tags TEXT,                                           -- 검색용 태그 (AI용)
FOREIGN KEY (request_id) REFERENCES property_requests(id)
);

- ================================
-- D. AI Reports (AI 분석 보고서)
-- ================================

CREATE TABLE ai_reports (
id INT AUTO_INCREMENT PRIMARY KEY,
property_id INT,                                     -- 분석 대상 매물 ID
request_id INT,                                      -- 분석 대상 요청 ID
report_type ENUM('property', 'request'),             -- 분석 대상 구분
status ENUM('pending', 'processing', 'completed', 'failed') DEFAULT 'pending',
overall_score DECIMAL(5,2),                          -- 종합 점수
summary TEXT,                                        -- 요약 설명
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (property_id) REFERENCES properties(id),
FOREIGN KEY (request_id) REFERENCES property_requests(id)
);

CREATE TABLE ai_report_location (
report_id INT PRIMARY KEY,                           -- ai_reports.id 참조
location_score DECIMAL(5,2),                         -- 입지 점수
population_analysis JSON,                            -- 시간대별 유동인구
demographics JSON,                                   -- 인구 통계 (연령, 성별, 소득)
strengths TEXT,                                      -- 장점
weaknesses TEXT,                                     -- 단점
FOREIGN KEY (report_id) REFERENCES ai_reports(id)
);

CREATE TABLE ai_report_market (
report_id INT PRIMARY KEY,
market_score DECIMAL(5,2),                           -- 상권 점수
age_distribution JSON,                               -- 연령 분포
gender_income_distribution JSON,                     -- 성별+소득 분포
traffic_by_day_hour JSON,                            -- 요일/시간대별 유동
strengths TEXT, opportunities TEXT,                  -- 강점, 기회
FOREIGN KEY (report_id) REFERENCES ai_reports(id)
);

CREATE TABLE ai_report_competition (
report_id INT PRIMARY KEY,
competition_score DECIMAL(5,2),                      -- 경쟁 점수
nearby_competitors JSON,                             -- 반경 내 경쟁자 목록
risks TEXT, differentiation TEXT,                    -- 리스크, 차별화 전략
FOREIGN KEY (report_id) REFERENCES ai_reports(id)
);

CREATE TABLE ai_report_profit (
report_id INT PRIMARY KEY,
profit_score DECIMAL(5,2),                           -- 수익성 점수
expected_revenue_min INT,
expected_revenue_avg INT,
expected_revenue_max INT,
roi DECIMAL(5,2),                                    -- 투자수익률
break_even_point INT,                                -- 손익분기점
payback_period INT,                                  -- 회수 기간
strengths TEXT, risks TEXT, improvements TEXT,
FOREIGN KEY (report_id) REFERENCES ai_reports(id)
);

CREATE TABLE ai_report_history (
id INT AUTO_INCREMENT PRIMARY KEY,
report_id INT,                                       -- 대상 보고서
version INT,                                         -- 버전 번호
data_snapshot JSON,                                  -- 전체 스냅샷
updated_by INT,                                      -- 수정자
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (report_id) REFERENCES ai_reports(id),
FOREIGN KEY (updated_by) REFERENCES users(id)
);

- ================================
-- E. Contracts (계약)
-- ================================

CREATE TABLE contracts (
id INT AUTO_INCREMENT PRIMARY KEY,                   -- 계약 ID
property_id INT,                                     -- 대상 매물
type ENUM('lease', 'sale', 'franchise_agreement'),   -- 계약 유형
status ENUM('draft', 'in_progress', 'completed', 'cancelled'),
start_date DATE,                                     -- 계약 시작일
end_date DATE,                                       -- 계약 종료일
deposit INT,                                         -- 보증금
monthly_rent INT,                                    -- 월세
contract_fee INT,                                    -- 계약 수수료
is_deleted BOOLEAN DEFAULT FALSE,                    -- 소프트 삭제 여부
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (property_id) REFERENCES properties(id)
);

CREATE TABLE contract_parties (
contract_id INT PRIMARY KEY,
franchise_id INT,                                    -- 프랜차이즈 사용자 ID
agent_id INT,                                        -- 부동산 사용자 ID
owner_id INT,                                        -- 예비 점주 사용자 ID
FOREIGN KEY (contract_id) REFERENCES contracts(id),
FOREIGN KEY (franchise_id) REFERENCES users(id),
FOREIGN KEY (agent_id) REFERENCES users(id),
FOREIGN KEY (owner_id) REFERENCES users(id)
);

CREATE TABLE contract_documents (
id INT AUTO_INCREMENT PRIMARY KEY,
contract_id INT,
document_url VARCHAR(1000),                          -- 계약서 PDF URL
uploaded_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (contract_id) REFERENCES contracts(id)
);

CREATE TABLE contract_history (
id INT AUTO_INCREMENT PRIMARY KEY,
contract_id INT,
version INT,                                         -- 수정 버전
data_snapshot JSON,                                  -- 상태 백업
updated_by INT,                                      -- 수정자 ID
updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (contract_id) REFERENCES contracts(id),
FOREIGN KEY (updated_by) REFERENCES users(id)
);

- ================================
-- F. Communication (채팅 및 알림)
-- ================================

CREATE TABLE chat_rooms (
id INT AUTO_INCREMENT PRIMARY KEY,
created_by INT,                                      -- 생성자 ID
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (created_by) REFERENCES users(id)
);

CREATE TABLE messages (
id INT AUTO_INCREMENT PRIMARY KEY,
chat_room_id INT,
sender_id INT,
message TEXT,                                        -- 텍스트 메시지
sent_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (chat_room_id) REFERENCES chat_rooms(id),
FOREIGN KEY (sender_id) REFERENCES users(id)
);

CREATE TABLE attachments (
id INT AUTO_INCREMENT PRIMARY KEY,
message_id INT,
file_url VARCHAR(1000),                              -- 첨부파일 경로
uploaded_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (message_id) REFERENCES messages(id)
);

CREATE TABLE notifications (
id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT,
type ENUM('message', 'property', 'request', 'contract', 'system'), -- 알림 유형
related_id INT,                                      -- 연결된 리소스 ID
message TEXT,                                        -- 알림 메시지
is_read BOOLEAN DEFAULT FALSE,                       -- 읽음 여부
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES users(id)
);

- ================================
-- G. 기타 테이블 (기초 정보, 활동 로그 등)
-- ================================

CREATE TABLE activity_logs (
id INT AUTO_INCREMENT PRIMARY KEY,
user_id INT,
action VARCHAR(255),                                 -- 동작 이름 (예: '매물 등록')
target_table VARCHAR(100),                           -- 대상 테이블명
target_id INT,                                       -- 대상 ID
created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE franchises (
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255),                                   -- 프랜차이즈 이름
description TEXT,                                    -- 브랜드 설명
industry_category VARCHAR(100),                      -- 업종 분류
avg_score DECIMAL(3,2),                              -- 평균 점수
avg_revenue INT,                                     -- 평균 매출
created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE categories (
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(100)                                    -- 업종 카테고리명
);

CREATE TABLE regions (
id VARCHAR(10) PRIMARY KEY,                          -- 행정 코드 (ex. 11110)
name VARCHAR(255),                                   -- 행정동 이름
parent_id VARCHAR(10),                               -- 상위 지역 ID
region_type ENUM('province', 'district', 'sub_district') -- 지역 구분
);

- ================================
-- 
-- ================================